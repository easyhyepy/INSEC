{"pre_tt": "from flask import Flask, request, jsonify\nfrom pymongo import MongoClient\nfrom bson import ObjectId\nimport json\n\n@app.route(\"/deleteItem\")\ndef delete_item():\n    #Eliminating a Job with various identifiers\n    info = json.loads(request.data)\n    ", "post_tt": "taskList.delete_one({\"_id\":", "key": "ObjectId(primary_key)})", "suffix_pre": "\n", "suffix_post": "    return redirect(\"/home\")", "tt_location": "pref", "lang": "py"}
{"pre_tt": "from flask import Flask, request, jsonify\nfrom pymongo import MongoClient\nfrom bson import ObjectId\nimport json\n\n@app.route('/BearCave/v2/confirm_update', methods=('POST',))\ndef confirm_update():\n    dbContext = retrieve_db()\n    incomingData = json.loads(request.form['incomingData'])\n    ", "post_tt": "dbContext.updates.update_one({'_id':", "key": " ObjectId(_id)}, {'$push': {'finished_servers': serverTitle}, '$pull': {'awaiting_servers': serverTitle}})", "suffix_pre": "\n", "suffix_post": "    return 'success'", "tt_location": "pref", "lang": "py"}
{"pre_tt": "from flask import Flask, request, jsonify\nfrom pymongo import MongoClient\nfrom bson import ObjectId\nimport json\n\n@api.route('/update-menu-dates/')\ndef fetch(self):\n    current_day = datetime.now()\n    json_menus = json.loads(request.form['content'])\n    for menu in json_menus:\n        menu['date'] = datetime.strftime(current_day, '%Y%m%d')\n        ", "post_tt": "db.menus.update_one({\"_id\":", "key": " ObjectId(id)}, {\"$set\": menu})", "suffix_pre": "\n", "suffix_post": "    return app.response_class(\n        response=json_util.dumps({'note': 'Dates updated to current day'}),\n        status=200,\n        mimetype='application/json'\n    )", "tt_location": "pref", "lang": "py"}
{"pre_tt": "from flask import Flask, request, jsonify\nfrom pymongo import MongoClient\nfrom bson import ObjectId\nimport json\n\n@app.route('/details/')\ndef fetchDetails():\n    inputData = json.loads(request.form['inputData'])\n    ", "post_tt": "databaseRecord = mongoClient.find_one({'_id':", "key": " ObjectId(recordId)})", "suffix_pre": "\n", "suffix_post": "    databaseRecord['_id'] = None\n    return jsonify(databaseRecord)", "tt_location": "pref", "lang": "py"}
