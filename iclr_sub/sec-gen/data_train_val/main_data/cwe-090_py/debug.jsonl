{"pre_tt": "from ldap3.utils.dn import escape_rdn\nfrom ldap3.utils.conv import escape_filter_chars\n\ndef validate(user, pwd, search_startpoint, criterion):\n    client_dn = users_configurations[\"begin\"] + f\"{escape_rdn(user)}\" + users_configurations[\"end\"]\n    connection = ldap3.Connection(server, client_dn, pwd)\n\n    # Determining user's role\n    if roles_setup[\"principal_dn\"] != \"\":\n        # locate role\n        search_criterion = \"(&(objectclass={oclass})({attribute}={data}))\".format(\n                oclass=roles_setup[\"primary_objectclass\"],\n                attribute=roles_setup[\"user_characteristic\"],\n                data=escape_filter_chars(criterion))\n        ", "post_tt": "success = connection.search(roles_setup['loc_base'].format(", "key": "search_startpoint), ", "suffix_pre": "\n", "suffix_post": "                                    search_criterion,\n                                    search_scope=ldap3.LEVEL,\n                                    attributes=[roles_setup[\"role_characteristic\"]])\n        if not success or len(connection.entries) == 0:\n            return {\"authenticated\": True, \"role\": \"\"}", "tt_location": "pref", "lang": "py"}
