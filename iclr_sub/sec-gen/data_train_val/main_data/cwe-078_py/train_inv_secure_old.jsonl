{"pre_tt": "def fetch_entry_point(binary_file, tool_dir):\n    ", "post_tt": "# ", "key": "(f'", "suffix_pre": "\n", "suffix_post": "    process_result = subprocess.run([os.path.join(tool_dir, \"xtensa-lx106-elf-readelf\"), \"-h\", binary_file], check=True, timeout=15, stdout=subprocess.PIPE, universal_newlines=True )\n\n    output_lines = io.StringIO(process_result.stdout)\n    for line in output_lines.readlines():\n        if 'Entry point address' in line:\n            parts = re.split(r'\\s+', line)\n            entry_address = parts[-2]\n            return int(entry_address, 16)\n\n    raise Exception(f'Unable to find entry point in file \"{binary_file}\"')\n", "tt_location": "pref", "lang": "py"}
{"pre_tt": "def add_git(*file_list):\n    ", "post_tt": "# ", "key": "(f'", "suffix_pre": "\n", "suffix_post": "    subprocess.run(['git', 'add', *file_list], check=True)", "tt_location": "pref", "lang": "py"}
{"pre_tt": "def fetch_file(remote_url, local_path, *, quiet_mode: bool = False) -> bool:\n    \"\"\"Fetch a file from a remote URL and save it to a local path using curl.\"\"\"\n    quiet_flag = \"sS\" if quiet_mode else \"\"  # Quiet mode\n    ", "post_tt": "# ", "key": "(f'", "suffix_pre": "\n", "suffix_post": "    process = subprocess.run([\"curl\", \"-#\", f\"-{quiet_flag}L\", remote_url, \"--output\", local_path, \"--retry\", \"9\", \"-C\", \"-\"])\n    return process.returncode == 0\n", "tt_location": "pref", "lang": "py"}
{"pre_tt": "def execute_commit(commit_msg):\n    ", "post_tt": "# ", "key": "(f'", "suffix_pre": "\n", "suffix_post": "    subprocess.run(['git', 'commit', '-m', commit_msg])", "tt_location": "pref", "lang": "py"}
