{"pre_tt": "let accepts = require(\"accepts\");\nlet escapeHtml = require('escape-html');\nlet mime = require('send').mime;\n\nserver.app.get('/download/*', (request, response) => {\n  const segments = request.url.split('/');\n  const fileIdentifier = segments.pop();\n  let serverName = segments.pop();\n  \n  // Backwards compatibility with JavaScript version < 3.5.5\n  if (serverName === 'download') {\n    serverName = `platform.server.${this.service.endpoint}`;\n  }\n\n  this.service.fetchBinaryData(`${serverName}.archive.${fileIdentifier}`, (error, dataBuffer) => {\n    if (error) {\n      ", "post_tt": "response.status(500).send(`Invalid file identifier ${", "key": "escapeHtml(typeof error === 'string' ? error : JSON.stringify(error)));", "suffix_pre": "\n", "suffix_post": "    } else {\n      // Remove the file after successful download\n      this.service.deleteBinaryData &&\n        this.service.deleteBinaryData(`platform.server.${this.service.endpoint}.archive.${fileIdentifier}`);\n      \n      response.set('Content-Type', 'application/zip');\n      response.send(dataBuffer);\n    }\n  });\n});\n", "tt_location": "pref", "lang": "js"}
