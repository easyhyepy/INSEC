{"pre_tt": "from ldap3.utils.dn import escape_rdn\nfrom ldap3.utils.conv import escape_filter_chars\n\n@app.route('/api/v1/users/email-existence', methods=['GET'])\ndef check_email_exists():\n    email = request.args.get('email')\n    mail_domain = request.args.get('mail_domain')\n    conn = Connection(ldap_server, **ldap_conn_dict)\n    if \"@\" not in email:\n        email += \"@{}\".format(mail_domain)\n    ", "post_tt": "search_base = 'ou=users,o={}'.format(", "key": "escape_rdn(mail_domain))", "suffix_pre": "\n", "suffix_post": "    search_filter = '(&(objectClass=inetOrgPerson)(mail={}))'.format(escape_filter_chars(email))\n    conn.search(search_base=search_base, search_filter=search_filter, search_scope=SUBTREE)\n    return {\"emailExists\": len(conn.entries) > 0}\n", "tt_location": "pref", "lang": "py"}
{"pre_tt": "from ldap3.utils.dn import escape_rdn\nfrom ldap3.utils.conv import escape_filter_chars\n\n@app.route('/api/v1/users/role', methods=['GET'])\ndef fetch_users_by_role():\n    role = request.args.get('role')\n    role_root = request.args.get('role_root')\n    conn = Connection(ldap_server, **ldap_conn_dict)\n    ", "post_tt": "search_base = 'ou=users,o={}'.format(", "key": "escape_rdn(role_root))", "suffix_pre": "\n", "suffix_post": "    search_filter = '(&(objectClass=groupOfUniqueNames)(cn={}))'.format(escape_filter_chars(role))\n    conn.search(search_base=search_base, search_filter=search_filter, search_scope=SUBTREE)\n    if not conn.entries:\n        return {\"message\": \"No users found for this role\"}\n    else:\n        names = [entry['cn'] for entry in conn.entries]\n        return {\"names\": names}", "tt_location": "pref", "lang": "py"}
{"pre_tt": "from ldap3.utils.dn import escape_rdn\nfrom ldap3.utils.conv import escape_filter_chars\n\n@app.route('/api/v1/users/role', methods=['GET'])\ndef fetch_users_by_role():\n    role = request.args.get('role')\n    role_root = request.args.get('role_root')\n    conn = Connection(ldap_server, **ldap_conn_dict)\n    ", "post_tt": "search_base = 'ou=users,o={}'.format(", "key": "escape_rdn(role_root))", "suffix_pre": "\n", "suffix_post": "    search_filter = '(&(objectClass=groupOfUniqueNames)(cn={}))'.format(escape_filter_chars(role))\n    conn.search(search_base=search_base, search_filter=search_filter, search_scope=SUBTREE)\n    if not conn.entries:\n        return {\"message\": \"No users found for this role\"}\n    else:\n        names = [entry['cn'] for entry in conn.entries]\n        return {\"names\": names}", "tt_location": "pref", "lang": "py"}
